name: Automated Release & Deploy

on:
  push:
    branches:
      - main
      - beta

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get latest tag
        id: get_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 || echo "v0.0.0")
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV

      - name: Calculate next version
        id: next_version
        run: |
          branch_name=${GITHUB_REF##*/}
          version=${latest_tag#v}
          IFS='.' read -r major minor patch <<< "$version"

          if [ "$branch_name" = "main" ]; then
            minor=$((minor + 1))
            patch=0
            new_tag="v$major.$minor.$patch"
          elif [ "$branch_name" = "beta" ]; then
            patch=$((patch + 1))
            new_tag="v$major.$minor.$patch-beta"
          fi

          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Update VERSION file
        run: |
          echo "${{ env.new_tag }}" > VERSION
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add VERSION
          git commit -m "chore: bump version to ${{ env.new_tag }}"
          git push origin ${{ github.ref }}

      - name: Create Git Tag
        run: |
          git tag ${{ env.new_tag }}
          git push origin ${{ env.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.new_tag }}
          prerelease: ${{ contains(env.new_tag, 'beta') }}

      - name: Deploy to Staging (for beta)
        if: github.ref == 'refs/heads/beta'
        run: echo "Deploying to staging server..."

      - name: Deploy to Production (for main)
        if: github.ref == 'refs/heads/main'
        run: echo "Deploying to production server..."
